$date
	Fri Nov 15 11:55:32 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_n_bitadder $end
$var wire 8 ! sum [7:0] $end
$var wire 1 " cout $end
$var parameter 32 # N $end
$var reg 8 $ a [7:0] $end
$var reg 8 % b [7:0] $end
$var reg 1 & cin $end
$scope module dut $end
$var wire 8 ' a [7:0] $end
$var wire 8 ( b [7:0] $end
$var wire 1 & cin $end
$var wire 8 ) sum [7:0] $end
$var wire 1 " cout $end
$var wire 9 * carry [8:0] $end
$var parameter 32 + N $end
$scope begin bit_adders[0] $end
$var parameter 2 , i $end
$scope module fa $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 / cin $end
$var wire 1 0 cout $end
$var wire 1 1 sum $end
$upscope $end
$upscope $end
$scope begin bit_adders[1] $end
$var parameter 2 2 i $end
$scope module fa $end
$var wire 1 3 a $end
$var wire 1 4 b $end
$var wire 1 5 cin $end
$var wire 1 6 cout $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$scope begin bit_adders[2] $end
$var parameter 3 8 i $end
$scope module fa $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = sum $end
$upscope $end
$upscope $end
$scope begin bit_adders[3] $end
$var parameter 3 > i $end
$scope module fa $end
$var wire 1 ? a $end
$var wire 1 @ b $end
$var wire 1 A cin $end
$var wire 1 B cout $end
$var wire 1 C sum $end
$upscope $end
$upscope $end
$scope begin bit_adders[4] $end
$var parameter 4 D i $end
$scope module fa $end
$var wire 1 E a $end
$var wire 1 F b $end
$var wire 1 G cin $end
$var wire 1 H cout $end
$var wire 1 I sum $end
$upscope $end
$upscope $end
$scope begin bit_adders[5] $end
$var parameter 4 J i $end
$scope module fa $end
$var wire 1 K a $end
$var wire 1 L b $end
$var wire 1 M cin $end
$var wire 1 N cout $end
$var wire 1 O sum $end
$upscope $end
$upscope $end
$scope begin bit_adders[6] $end
$var parameter 4 P i $end
$scope module fa $end
$var wire 1 Q a $end
$var wire 1 R b $end
$var wire 1 S cin $end
$var wire 1 T cout $end
$var wire 1 U sum $end
$upscope $end
$upscope $end
$scope begin bit_adders[7] $end
$var parameter 4 V i $end
$scope module fa $end
$var wire 1 W a $end
$var wire 1 X b $end
$var wire 1 Y cin $end
$var wire 1 Z cout $end
$var wire 1 [ sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 V
b110 P
b101 J
b100 D
b11 >
b10 8
b1 2
b0 ,
b1000 +
b1000 #
$end
#0
$dumpvars
1[
1Z
1Y
1X
1W
0U
1T
1S
1R
0Q
0O
1N
0M
1L
1K
1I
0H
0G
1F
0E
1C
0B
0A
0@
1?
0=
0<
0;
0:
09
17
06
05
04
13
01
00
0/
0.
0-
b111000000 *
b10011010 )
b11110000 (
b10101010 '
0&
b11110000 %
b10101010 $
1"
b10011010 !
$end
#10000
